!function (e, t) { "use strict"; var a = "blank.html", s = ["search", "number", "range", "color", "tel", "url", "email", "month", "week", "time", "date", "datetime", "datetime-local"], i = ["text", "password", "hidden", "search", "range", "color", "tel", "url", "email", "month", "week", "time"], n = ["standard", "touch"], l = { NoValidate: !1, UseHtml5Required: !1, AutoComplete: !0, IncludeAutoCompleteTrigger: !1, LabelPosition: "above", LabelSuffix: ":", LabelRequiredString: "<span class='jfs_required_label'>*</span>", LabelRequiredPrepend: !1, OptionLabelPosition: "right", FieldButtonPosition: "right", IconLabelPosition: "right", InlineOptions: !0, InfoBubbleIcon: "", RepeatableGroupIcons: {}, Interface: n[0], ExcludeFormTags: !1, AddZeroedTabIndexes: !0, ResetPageTabIndexes: !1, CustomFields: {}, CustomContainers: {}, CustomInputOptions: {}, Functions: {} }, r = { item: "i", field_sets: "sets", legend: "lg", fields: "fs", field: "f", key: "k", show: "s", type: "t", label: "l", title: "ttl", disabled: "d", placeholder: "p", autofocus: "a", autocomplete: "c", label_position: "lp", mods: "m", mods_group_fields: "mgf", value: "v", field_value: "fv", options: "os", options_predefined: "osp", inline: "in", option_label_position: "olp", control_btns: "cbts", interactions: "ints", detections: "dets", detect: "det", bool_operator: "bop", values: "vs", actions: "acts", actions_true: "actst", actions_false: "actsf", action: "act", target: "tgt", params: "prms", param: "prm", field_btns: "fbts" }, o = { root: "jfs", vals: "values" }, d = { Req: "required", ReqPrepend: "requiredprepend", ReqCustom: "requiredcustom", LabelSuffix: "labelsuffix", AddClass: "addclass", AddClassToPair: "addclasstopair", AddClassToLabelContainer: "addclasstolabelcont", AddClassToLabel: "addclasstolabel", AddClassToFieldContainer: "addclasstofieldcont", AddClassToField: "addclasstofield", AddDataAttrs: "adddataattributes", Length: "length", Min: "min", Max: "max", Count: "count", Status: "status", AllowChars: "allowchars", PreventChars: "preventchars", CharCounter: "charcounter", WordCounter: "wordcounter", AugmentBtns: "augmentbuttons", AugmentHtml: "augmenthtml", ButtonText: "btn_text", ButtonTitle: "btn_title", ButtonPosition: "btn_position", ButtonIcon: "btn_icon", ButtonIconLabelPosition: "btn_icon_label_position", ButtonFunction: "btn_function", ButtonFunctionParam: "btn_function_param", WidthFillWrap: "widthfillwrap", InfoBub: "infobubble" }, u = { Container: "jfs_cont", Interface_Prefix: "jfs_int_", Form: "jfs_form", Set: "jfs_set", Pair: "jfs_pair", Label: "jfs_lbl", Field: "jfs_fld", Group: "jfs_grp", KeyPrefix: "jfs_key_", FieldWrap: "jfs_fld_wrap", Btn: "jfs_btn", AugmentBtn: "jfs_aug_btn", AugmentHtml: "jfs_aug_html", AugmentHtmlAbove: "jfs_aug_html_above", AugmentHtmlBelow: "jfs_aug_html_below", AugmentHtmlLabelAbove: "jfs_aug_html_label_above", AugmentHtmlLabelBelow: "jfs_aug_html_label_below", AugmentHtmlFieldAbove: "jfs_aug_html_field_above", AugmentHtmlFieldBelow: "jfs_aug_html_field_below", RadioLabel: "jfs_rdo_lbl", CheckboxLabel: "jfs_cb_lbl", FieldTypePrefix: "jfs_fldtype_", ContainsSetPrefix: "jfs_ctnsset_", ContainsFieldPrefix: "jfs_ctnsfld_", ContainsGroup: "jfs_ctnsgrp", LabelPositionPrefix: "jfs_lblpos_", ContainsHiddenField: "jfs_ctnshidden", ContainsHtmlField: "jfs_ctnshtml", Unshown: "jfs_unshown", HasFocus: "jfs_has_focus", InlineOpt: "jfs_inline_option", BlockOpt: "jfs_block_option", InfoBub: "jfs_infobubble", Date: "jfs_date", DateTime: "jfs_datetime", DateTimeLocal: "jfs_datetime_local", CharCounter: "jfs_charcounter", WordCounter: "jfs_wordcounter", CharCounterText: "jfs_charcounter_text", WordCounterText: "jfs_wordcounter_text", RepGrpSets: "jfs_repgrp_sets", RepGrpBtns: "jfs_repgrp_btns", RepGrpCtrlBtns: "jfs_repgrp_ctrl_btns", RepGrpBtn: "jfs_repgrp_btn", InRepGrp: "jfs_in_repgrp", AutoCompleteTriggerButton: "jfs_trigger_autocomplete" }, c = { Disabled: 'disabled="disabled"', Selected: 'selected="selected"', Checked: 'checked="checked"', Required: 'required="required"', AutoFocus: 'autofocus="autofocus"', AutoComplete: "autocomplete", PlaceHolder: "placeholder", MaxLength: "maxlength", Title: "title", DATA_FormKeys: "jfs_formkeys", DATA_FieldName: "jfs_fieldname", DATA_ShowStatus: "jfs_showstatus", DATA_MinLength: "jfs_minlength", DATA_AllowChars: "jfs_allowchars", DATA_PreventChars: "jfs_preventchars", DATA_BtnFunct: "jfs_btn_function", DATA_BtnFunctParam: "jfs_btn_function_param", DATA_DTPicker: "jfs_dtpicker", DATA_RepGrpBtnAddLoc: "jfs_repgrp_btn_addloc" }, p = { LENGTH_STATUS: "jfs_length_status" }, h = { Key: "/", Checkbox_Value: "|" }, f = !1, m = "/"; if (e.jQuery) { f = !0; var b, v, A, g, F = document.getElementById("jfs-library-script"); if (null !== F) g = F; else { var C = document.getElementsByTagName("script"); g = C[C.length - 1] } m = g.getAttribute("src").split("?")[0].split("/").slice(0, -1).join("/") + "/" } else alert("JBU Forms Error: jQuery Library Not Loaded."); var y = { Init: function (t, a, s) { var o = jQuery.extend(!0, {}, s); if (f) { if ("ContainerId" in o) { if (o.Container = jQuery("#" + o.ContainerId), o.Container.length > 0) { if (o.FieldsInit = eA(t), o.ValuesKeys = [], o.ValuesUnfilled = [], o.FormIsReady = !1, o.TabPressed = !1, o.ShiftTabPressed = !1, o.RepeatableGroups = function e(t) { for (var a = {}, s = {}, i = 0; i < t.length; i++)B(t[i][r.key], t[i], s, a); return { Values: a, Adds: s } }(o.FieldsInit[r.field_sets]), o.PreDefindedOptionsNoEmptyDict = eg(!1), o.PreDefindedOptionsDict = eg(!0), r.options_predefined in o.FieldsInit) for (var m = o.FieldsInit[r.options_predefined], g = 0; g < m.length; g++)r.key in m[g] && r.options in m[g] && (o.PreDefindedOptionsDict[m[g][r.key]] = m[g][r.options]); for (var F in o.FieldsCurrent = eA(o.FieldsInit), r.values in a && es(o.FieldsCurrent[r.field_sets], a[r.values], "", o), l) F in o || (o[F] = l[F]); !function t(a) { for (var s, l, o = 0; o < n.length; o++)a.Container.removeClass(u.Interface_Prefix + n[o]); for (var f in a.Container.addClass(u.Container).addClass(u.Interface_Prefix + a.Interface).empty().html((s = a, l = V(s.FieldsCurrent[r.field_sets], [], !1, s), s.ExcludeFormTags || (l = G("form", "", 0, [], [], [], l, s)), l)), a.Form = jQuery("#" + a.ContainerId + " form"), a.Interactions = function e(t) { var a = { Setting: {}, OnFocus: {}, OnBlur: {}, OnKeyUp: {} }; if (r.interactions in t.FieldsCurrent) for (var s = t.FieldsCurrent[r.interactions], i = 0; i < s.length; i++)for (var n = s[i], l = 0; l < n[r.detections].length; l++) { var o = n[r.detections][l][r.target]; o.split(h.Key), "onfocus" === n[r.detections][l][r.detect] ? o in a.OnFocus ? a.OnFocus[o].push(n) : r.actions in n ? a.OnFocus[o] = n[r.actions] : r.actions_true in n && (a.OnFocus[o] = n[r.actions_true]) : "onblur" === n[r.detections][l][r.detect] ? o in a.OnBlur ? a.OnBlur[o].push(n) : r.actions in n ? a.OnBlur[o] = n[r.actions] : r.actions_true in n && (a.OnBlur[o] = n[r.actions_true]) : "onkeyup" === n[r.detections][l][r.detect] ? o in a.OnKeyUp ? a.OnKeyUp[o].push(n) : r.actions in n ? a.OnKeyUp[o] = n[r.actions] : r.actions_true in n && (a.OnKeyUp[o] = n[r.actions_true]) : o in a.Setting ? a.Setting[o].push(n) : a.Setting[o] = [n] } return a }(a), $(a.Form, a), function t(a) { for (var s, n = [], l = 0; l < i.length; l++)n.push("input." + u.Field + "_input[type=" + i[l] + "]"); v = n.join(", ") + ", textarea." + u.Field + "_textarea", A = "select." + u.Field + "_select, input." + u.Field + "_input[type=radio], input." + u.Field + "_input[type=checkbox]", a.Form.on("paste", v, function (e) { var t = jQuery(this); setTimeout(function () { t.trigger("custompaste", e) }, 100) }), a.Form.on("keyup custompaste actionchange externalchange focusout", v, function (e) { clearTimeout(s); var t, i, n, l, r, o, d = jQuery(this), h = T(d, a); (d.attr(c.MaxLength) || d.data(c.DATA_MinLength)) && function e(t) { clearTimeout(b), jQuery("#" + p.LENGTH_STATUS).remove(); var a = !1, s = 0, i = 0, n = 9999, l = t.val().length; if (t.data(c.DATA_ShowStatus)) { a = !0; var r = t.data(c.DATA_ShowStatus); -1 !== r.indexOf("%") && (s = parseInt(r.replace("%", ""))) } t.data(c.DATA_MinLength) && (i = parseInt(t.data(c.DATA_MinLength))), t.is("[" + c.MaxLength + "]") && (n = parseInt(t.attr(c.MaxLength))); var o = l / n * 100 > s; if (a && (l < i || o)) { var d = "<div id='" + p.LENGTH_STATUS + "'><p>"; d += "Length: <b>" + l + "</b>"; var u = []; i > 0 && u.push("MIN: <b>" + i + "</b>"), n < 9999 && u.push("MAX: <b>" + n + "</b>"), d += "<br/><span>(" + u.join(", ") + ")</span>", d += "</p></div>", t.before(d), b = setTimeout(function () { jQuery("#" + p.LENGTH_STATUS).fadeOut(100) }, 3e3), t.blur(function () { jQuery("#" + p.LENGTH_STATUS).remove(), clearTimeout(b) }) } }(d), d.hasClass(u.Field + "_input_number") && d.val(eh(h.DomVal, "0123456789.-", !1)), d.data(c.DATA_AllowChars) && d.val(eh(h.DomVal, d.data(c.DATA_AllowChars), !1)), d.data(c.DATA_PreventChars) && d.val(function e(t, a, s) { t += ""; var i = ""; s && (t = t.replace(/ /g, "_")); for (var n = 0; n < t.length; n++)-1 === a.toString().indexOf(t.charAt(n)) && (i += t.charAt(n)); return i }(h.DomVal, d.data(c.DATA_PreventChars), !1)), i = d, n = h, l = a, r = (t = e.type, "actionchange" === t ? "action" : "externalchange" === t ? "external" : "user"), i.hasClass(u.CharCounter) && ef(i), i.hasClass(u.WordCounter) && em(i), o = [], n.FormKey in l.Interactions.Setting && (o = _(n.FormKey, l)), x(i, n, l, r), I(o, l) }), a.Form.on("change actionchange externalchange customoptionsinit", A, function (e) { var t = jQuery(this), s = T(t, a), i = []; if (s.FormKey in a.Interactions.Setting && (i = _(s.FormKey, a)), "radio" === s.FcField[r.type] || "checkbox" === s.FcField[r.type]) { var n = s.FormKey.substr(0, s.FormKey.lastIndexOf(h.Key)); n in a.Interactions.Setting && (i = i.concat(_(n, a))) } s.FcField[r.field_value] = s.DomVal; var l = R(a); if (a.FormIsReady) { var o = "user"; "actionchange" === e.type ? o = "action" : "externalchange" === e.type ? o = "external" : "customoptionsinit" === e.type && (o = "customoptionsinit"), "Changed" in a && a.Changed(t, s.FormKey, s.DomVal, s.FcVal, l.Values, l.Unfilled, a, o) } I(i, a) }), a.Form.on("focus", v + ", select." + u.Field + "_select, button." + u.Field + "_button", function () { jQuery(this).parent().parent().parent().addClass(u.HasFocus) }), a.Form.on("blur", v + ", select." + u.Field + "_select, button." + u.Field + "_button", function () { jQuery(this).parent().parent().parent().removeClass(u.HasFocus) }), a.Form.on("focus", "input." + u.Field + "_input[type=radio], input." + u.Field + "_input[type=checkbox]", function () { jQuery(this).parent().addClass(u.HasFocus), jQuery(this).parent().parent().parent().parent().addClass(u.HasFocus) }), a.Form.on("blur", "input." + u.Field + "_input[type=radio], input." + u.Field + "_input[type=checkbox]", function () { jQuery(this).parent().removeClass(u.HasFocus), jQuery(this).parent().parent().parent().parent().removeClass(u.HasFocus) }), a.Form.on("focus", v + ", " + A, function (e) { var t = jQuery(this), s = T(t, a); s.FormKey in a.Interactions.OnFocus && I(a.Interactions.OnFocus[s.FormKey], a) }), a.Form.on("blur", v + ", " + A, function (e) { var t = jQuery(this), s = T(t, a); s.FormKey in a.Interactions.OnBlur && I(a.Interactions.OnBlur[s.FormKey], a) }), a.Form.on("click", "button." + u.Btn + ", button." + u.AugmentBtn, function () { var t = jQuery(this), s = t.data(c.DATA_BtnFunct), i = t.data(c.DATA_FormKeys).join(h.Key), n = R(a), l = t.data(c.DATA_BtnFunctParam); try { a.Functions[s](n.Values, n.Unfilled, a, i, l) } catch (r) { e.console && console.log("JFS Error: Unable to run function: " + s, r) } }), a.Form.on("click", "button." + u.RepGrpBtn, function () { var t = jQuery(this), s = "prepend" === t.data(c.DATA_RepGrpBtnAddLoc); t.hasClass(u.RepGrpBtn + "_add") ? function t(a, s, i) { var n = i.FieldsCurrent[r.field_sets], l = a.data(c.DATA_FormKeys), o = W(l.slice(0), n, !0), u = 500; if (r.mods in o) { var p = ed(o[r.mods]); if (d.Count in p) try { var f = ec(p[d.Count][r.params]); d.Max in f && (u = parseInt(f[d.Max])) } catch (m) { e.console && console.log("JFS Error: Error parsing repeatable group min count modifier", l, m) } } if (o[r.field_sets].length < u) { for (var b = [l[0]], v = 1; v < l.length; v += 2)b.push(l[v]); var A = b.join(h.Key); "RepeatableGroupBeforeChange" in i ? i.RepeatableGroupBeforeChange("add", a, A, i, function () { S(l, a, o, A, s, i) }) : S(l, a, o, A, s, i) } }(t.parent().parent(), s, a) : t.hasClass(u.RepGrpBtn + "_remove") ? H(t.parent().parent().parent(), "remove", a) : t.hasClass(u.RepGrpBtn + "_up") ? H(t.parent().parent().parent(), "up", a) : t.hasClass(u.RepGrpBtn + "_down") && H(t.parent().parent().parent(), "down", a) }) }(a), a.Form.find("select").trigger("customoptionsinit"), a.Interactions.Setting) I(_(f, a), a); a.Form.find("input[autofocus]").eq(0).focus(), a.ResetPageTabIndexes && y.SetTabIndexes(), y.Packages[a.ContainerId] = a, a.FormIsReady = !0, "Ready" in a && a.Ready(R(a).Values, a) }(o) } else alert('JBU Forms Error: A container with id "' + o.ContainerId.toString() + '" could not be found on the page.') } else alert("JBU Forms Error: 'ContainerId' must be set.") } else !function e(t, a) { f ? y.Init(t, a) : setTimeout(function () { e(t, a) }, 500) }(t, o) }, Packages: {}, ParseFormXml: function e(t) { var a = {}; return jQuery(jQuery.parseXML(t)).find(o.root).children().each(function (e, t) { var s = jQuery(t); a[r[t.nodeName]] = et(s) }), a }, ParseValuesXml: function e(t) { var a = {}, s = {}; return jQuery(jQuery.parseXML(t)).find(o.root + " " + o.vals).children().each(function (e, t) { var a = jQuery(t); s[t.nodeName] = ea(a) }), a[r[o.vals]] = s, a }, PerformFormActions: I, GetPredefinedOptions: eg, ParseSelectOptions: Z, ParseModifiersList: ed, ParseModifierParamsList: ec, GetCurrentValues: R, GetDomField: k, GetCurrentFieldValue: function (e, t) { var a = k(e, t); return a.hasClass(u.Unshown) ? "" : L(a) }, TriggerAutoCompleteSubmit: function (e) { jQuery("#" + e.ContainerId + " button." + u.AutoCompleteTriggerButton).click() }, RegisterExternalChange: function (e) { e.trigger("externalchange") }, TriggerBlurByFieldKeys: function (e, t) { for (var a = [], s = 0; s < e.length; s++)a.push({ tgt: e[s], act: "setfocusto" }), a.push({ tgt: e[s], act: "triggerbluron" }); y.PerformFormActions(a, t) }, SetTabIndexes: function (e) { void 0 === e && (e = ":input:not(:hidden)"), jQuery(e).each(function (e) { jQuery(this).attr("tabindex", e + 1) }) } }; function $(e, t) { e.find("input, select, textarea").each(function () { var e = jQuery(this); if (e.hasClass(u.CharCounter) && ef(e), e.hasClass(u.WordCounter) && em(e), void 0 !== jQuery.ui) { if (e.hasClass(u.Date)) { var a = e.data(c.DATA_DTPicker); "JfsNoWeekends" in a && a.JfsNoWeekends && (a.beforeShowDay = jQuery.datepicker.noWeekends), a.onClose = function () { x(e, T(e, t), t, "user") }, e.datepicker(a) } else if (e.hasClass(u.DateTime) || e.hasClass(u.DateTimeLocal)) { var s = e.data(c.DATA_DTPicker); "JfsNoWeekends" in s && s.JfsNoWeekends && (s.beforeShowDay = jQuery.datepicker.noWeekends), s.addSliderAccess = !0, s.sliderAccessArgs = { touchonly: !1 }, s.onClose = function () { x(e, T(e, t), t, "user") }, e.datetimepicker(s) } } }) } function k(e, t) { var a = e.split(h.Key), s = K(a.slice(0), t.FieldsInit[r.field_sets]); return E(a.slice(0), t.Form, s) } function T(e, t) { var a = t.FieldsCurrent[r.field_sets], s = e.attr("name"), i = L(e), n = e.data(c.DATA_FormKeys), l = n.join(h.Key), o = W(n.slice(0), a, !1), d = r.field_value in o ? o[r.field_value] : ""; return { FieldKey: s, DomVal: i, FormKey: l, FcField: o, FcVal: d } } function L(e) { var t = e.eq(0).attr("type"); if ("radio" === t) { var a = e.eq(0).parent().parent().find("input:checked").val(); return void 0 === a ? "" : a } if ("checkbox" !== t) return e.val(); var s = []; return e.eq(0).parent().parent().find("input:checked").each(function () { s.push(jQuery(this).val()) }), s.join(h.Checkbox_Value) } function D(e, t) { var a = !1, s = e.eq(0).attr("type"); return a = "radio" === s || "checkbox" === s ? void 0 !== e.eq(0).parent().parent().find("input:checked").val() : !(t && "" === e.val()) } function w(e, t) { for (var a = t.FieldsCurrent[r.field_sets], s = {}, i = 0; i < a.length; i++)a[i][r.key] === e && (s = a[i]); return s } function x(e, t, a, s) { if (t.FcVal !== t.DomVal) { t.FcField[r.field_value] = t.DomVal; var i = R(a); a.FormIsReady && "Changed" in a && a.Changed(e, t.FormKey, t.DomVal, t.FcVal, i.Values, i.Unfilled, a, s) } } function _(e, t) { var a = []; if (e in t.Interactions.Setting) for (var s = t.Interactions.Setting[e], i = 0; i < s.length; i++) { var n = r.bool_operator in s[i] ? s[i][r.bool_operator] : "OR"; P(s[i][r.detections], n, t) ? r.actions_true in s[i] ? a = a.concat(s[i][r.actions_true]) : r.actions in s[i] && (a = a.concat(s[i][r.actions])) : r.actions_false in s[i] && (a = a.concat(s[i][r.actions_false])) } return a } function P(e, t, a) { for (var s = !1, i = 0, n = 0; n < e.length; n++) { var l = !1, o = e[n][r.target].split(h.Key), d = K(o.slice(0), a.FieldsInit[r.field_sets]), u = a.FieldsCurrent[r.field_sets], c = w(o[0], a), p = E(o.slice(0), a.Form, d), f = W(o.slice(0), u, !1), m = p.is(":visible"), b = !(r.show in f && "false" === f[r.show]) && !(r.show in c && "false" === c[r.show]), v = !1; switch (e[n][r.detect]) { case "onshow": v = !0, !b && m && (l = !0); break; case "onhide": v = !0, b && !m && (l = !0) }if (!v) { var A = r.param in e[n] ? e[n][r.param] : ""; if (d) { var g = W(o.slice(0), u, !0)[r.field_sets].length; switch (e[n][r.detect]) { case "groupitemcountis": g === parseInt(A, 10) && (l = !0); break; case "groupitemcountlessthan": g < parseInt(A, 10) && (l = !0); break; case "groupitemcountgreaterthan": g > parseInt(A, 10) && (l = !0) } } else { var F = L(p), C = f[r.field_value]; switch (e[n][r.detect]) { case "isshown": m && (l = !0); break; case "ishidden": m || (l = !0); break; case "hasvalue": D(p, !1) && (l = !0); break; case "hasvaluenotempty": D(p, !0) && (l = !0); break; case "hasnovalue": D(p, !1) || (l = !0); break; case "hasnovalueorempty": D(p, !0) || (l = !0); break; case "onchange": F !== C && (l = !0); break; case "onchangenotempty": "" !== F && null !== F && (l = !0); break; case "valueis": F === A && (l = !0); break; case "valueisnot": F !== A && (l = !0); break; case "valuelessthan": parseInt(F, 10) < parseInt(A, 10) && (l = !0); break; case "valuegreaterthan": parseInt(F, 10) > parseInt(A, 10) && (l = !0); break; case "checkboxvaluecontains": -1 !== F.split(h.Checkbox_Value).indexOf(A) && (l = !0); break; case "checkboxvaluedoesnotcontain": -1 === F.split(h.Checkbox_Value).indexOf(A) && (l = !0); break; case "checkboxvaluesumis": for (var y = F.split(h.Checkbox_Value), $ = 0, k = 0; k < y.length; k++)$ += isNaN(parseInt(y[k], 10)) ? 0 : parseInt(y[k], 10); $ === parseInt(A, 10) && (l = !0); break; case "checkboxvaluesumgreaterthan": for (var T = F.split(h.Checkbox_Value), x = 0, _ = 0; _ < T.length; _++)x += isNaN(parseInt(T[_], 10)) ? 0 : parseInt(T[_], 10); x > parseInt(A, 10) && (l = !0); break; case "checkboxvaluesumlessthan": for (var P = F.split(h.Checkbox_Value), I = 0, B = 0; B < P.length; B++)I += isNaN(parseInt(P[B], 10)) ? 0 : parseInt(P[B], 10); I < parseInt(A, 10) && (l = !0) } } } l && i++ } return "OR" === t && i > 0 ? s = !0 : "AND" === t && i === e.length ? s = !0 : "XOR" === t && i % 2 != 0 ? s = !0 : -1 !== t.indexOf(">") && !isNaN(parseInt(t.substring(1), 10)) && i > parseInt(t.substring(1), 10) ? s = !0 : -1 !== t.indexOf("<") && !isNaN(parseInt(t.substring(1), 10)) && i < parseInt(t.substring(1), 10) ? s = !0 : -1 === t.indexOf("=") || isNaN(parseInt(t.substring(1), 10)) || i !== parseInt(t.substring(1), 10) || (s = !0), s } function I(t, a) { for (var s = a.FieldsCurrent[r.field_sets], i = 0; i < t.length; i++) { var n = t[i][r.target], l = t[i][r.action], o = r.param in t[i] ? t[i][r.param] : ""; if ("showset" === l || "hideset" === l) { var d = w(n, a), c = M(n, a); "showset" === l ? (c.removeClass(u.Unshown), d[r.show] = "true") : (c.hasClass(u.Unshown) || c.addClass(u.Unshown), d[r.show] = "false") } else if ("runfunction" === l) try { var p = R(a); a.Functions[n](p.Values, p.Unfilled, a, o) } catch (f) { e.console && console.log("JFS Error: Unable to run function.", n, f) } else try { var m = n.split(h.Key), b = K(m.slice(0), a.FieldsInit[r.field_sets]), v = E(m.slice(0), a.Form, !0), A = E(m.slice(0), a.Form, b), g = W(m.slice(0), s, b); switch (l) { case "disablefield": var F = m[m.length - 1], C = parseInt(F), y = !isNaN(C), $ = A.attr("type"); if ("select" !== $ || A.hasClass(u.KeyPrefix + F)) { if (A.prop("disabled", !0), "radio" === $ || "checkbox" === $) for (var k = 0; k < g[r.options].length; k++)(!y || y && k === C) && (g[r.options][k][r.disabled] = "true"); else g[r.disabled] = "true"; A.trigger("actionchange") } else { var T = A.find("option"); T.length > C && (T.eq(C).prop("disabled", !0), g[r.options][C][r.disabled] = "true", A.trigger("actionchange")) } break; case "enablefield": var D = m[m.length - 1], x = parseInt(D), _ = !isNaN(x), P = A.attr("type"); if ("select" !== P || A.hasClass(u.KeyPrefix + D)) { if (A.prop("disabled", !1), "radio" === P || "checkbox" === P) for (var I = 0; I < g[r.options].length; I++)(!_ || _ && I === x) && (g[r.options][I][r.disabled] = "false"); else g[r.disabled] = "false"; A.trigger("actionchange") } else { var B = A.find("option"); B.length > x && (B.eq(x).prop("disabled", !1), g[r.options][x][r.disabled] = "false", A.trigger("actionchange")) } break; case "setaugmenthtmlaboveto": v.find("div." + u.AugmentHtmlAbove).remove(), v.prepend("<div class='" + u.AugmentHtml + " " + u.AugmentHtmlAbove + "'>" + o + "</div>"); break; case "setaugmenthtmlbelowto": v.find("div." + u.AugmentHtmlBelow).remove(), v.append("<div class='" + u.AugmentHtml + " " + u.AugmentHtmlBelow + "'>" + o + "</div>"); break; case "setaugmenthtmllabelaboveto": v.find("div." + u.AugmentHtmlLabelAbove).remove(), v.children("div." + u.Label).prepend("<div class='" + u.AugmentHtml + " " + u.AugmentHtmlLabelAbove + "'>" + o + "</div>"); break; case "setaugmenthtmllabelbelowto": v.find("div." + u.AugmentHtmlLabelBelow).remove(), v.children("div." + u.Label).append("<div class='" + u.AugmentHtml + " " + u.AugmentHtmlLabelBelow + "'>" + o + "</div>"); break; case "setaugmenthtmlfieldaboveto": v.find("div." + u.AugmentHtmlFieldAbove).remove(), A.prepend("<div class='" + u.AugmentHtml + " " + u.AugmentHtmlFieldAbove + "'>" + o + "</div>"); break; case "setaugmenthtmlfieldbelowto": v.find("div." + u.AugmentHtmlFieldBelow).remove(), A.append("<div class='" + u.AugmentHtml + " " + u.AugmentHtmlFieldBelow + "'>" + o + "</div>"); break; case "removeaugmenthtmlabove": v.find("div." + u.AugmentHtmlAbove).remove(); break; case "removeaugmenthtmlbelow": v.find("div." + u.AugmentHtmlBelow).remove(); break; case "removeaugmenthtmllabelabove": v.find("div." + u.AugmentHtmlLabelAbove).remove(); break; case "removeaugmenthtmllabelbelow": v.find("div." + u.AugmentHtmlLabelBelow).remove(); break; case "removeaugmenthtmlfieldabove": v.find("div." + u.AugmentHtmlFieldAbove).remove(); break; case "removeaugmenthtmlfieldbelow": v.find("div." + u.AugmentHtmlFieldBelow).remove(); break; case "setfieldvalueto": if (v.hasClass(u.ContainsHtmlField)) v.children("." + u.Field).html(o); else if ("radio" === g[r.type] || "checkbox" === g[r.type]) { var S = o.split(h.Checkbox_Value); A.each(function () { var e = jQuery(this); -1 !== S.indexOf(e.attr("value")) ? e.prop("checked", !0) : e.prop("checked", !1), e.trigger("actionchange") }) } else "button" === g[r.type] ? A.html(o).trigger("actionchange") : A.val(o).trigger("actionchange"); break; case "copyfieldvaluefrom": var H = o.split(h.Key), j = K(H.slice(0), a.FieldsInit[r.field_sets]), O = E(H.slice(0), a.Form, j); W(H.slice(0), s, j); var N = L(O); if (v.hasClass(u.ContainsHtmlField)) v.children("." + u.Field).html(N); else if ("radio" === g[r.type] || "checkbox" === g[r.type]) { var V = N.split(h.Checkbox_Value); A.each(function () { var e = jQuery(this); -1 !== V.indexOf(e.attr("value")) ? e.prop("checked", !0) : e.prop("checked", !1), e.trigger("actionchange") }) } else "button" === g[r.type] ? A.html(N).trigger("actionchange") : A.val(N).trigger("actionchange"); break; case "settochecked": ("radio" === A.attr("type") || "checkbox" === A.attr("type")) && (A.prop("checked", !0), A.trigger("actionchange")); break; case "settounchecked": ("radio" === A.attr("type") || "checkbox" === A.attr("type")) && (A.prop("checked", !1), A.trigger("actionchange")); break; case "checkall": A.length > 0 && A.prop("checked", !0).trigger("actionchange"); break; case "uncheckall": A.length > 0 && A.prop("checked", !1).trigger("actionchange"); break; case "updatefieldoptions": var G = []; try { o in a.CustomInputOptions ? G = a.CustomInputOptions[o](R(a).Values, a) : o in a.PreDefindedOptionsDict && (G = a.PreDefindedOptionsDict[o]) } catch (q) { e.console && console.log("JFS Error: Unable to parse custom input options: ", a.CustomInputOptions, q) } g[r.options] = eA(G), A.html(Z(G, "")).trigger("actionchange"); break; case "removeselectoption": var U = m[m.length - 1], J = A.attr("type"); if ("select" === J && !A.hasClass(u.KeyPrefix + U)) { var Y = parseInt(U), X = A.children("option"); X.length > Y && (X.eq(Y).remove(), delete g[r.options][Y], A.trigger("actionchange")) } break; case "setlabelto": v.find("div." + u.Label + " label, div." + u.Label + " legend").html(o); break; case "prependlabelwith": v.find("div." + u.Label + " label, div." + u.Label + " legend").prepend(o); break; case "appendlabelwith": v.find("div." + u.Label + " label, div." + u.Label + " legend").append(o); break; case "addclasstopair": v.addClass(o); break; case "removeclassfrompair": v.removeClass(o); break; case "togglepairclass": v.toggleClass(o); break; case "addclasstolabelcont": v.children("div." + u.Label).addClass(o); break; case "removeclassfromlabelcont": v.children("div." + u.Label).removeClass(o); break; case "togglelabelcontclass": v.children("div." + u.Label).toggleClass(o); break; case "addclasstolabel": v.children("div." + u.Label).children("label, legend").addClass(o); break; case "removeclassfromlabel": v.children("div." + u.Label).children("label, legend").removeClass(o); break; case "togglelabelclass": v.children("div." + u.Label).children("label, legend").toggleClass(o); break; case "addclasstofieldcont": v.children("div." + u.Field).addClass(o); break; case "removeclassfromfieldcont": v.children("div." + u.Field).removeClass(o); break; case "togglefieldcontclass": v.children("div." + u.Field).toggleClass(o); break; case "addclasstofield": A.addClass(o); break; case "removeclassfromfield": A.removeClass(o); break; case "togglefieldclass": A.toggleClass(o); break; case "removeelementwithselector": v.find(o).remove(); break; case "showfield": v.removeClass(u.Unshown), A.trigger("actionchange"), g[r.show] = "true"; break; case "hidefield": v.hasClass(u.Unshown) || v.addClass(u.Unshown), A.trigger("actionchange"), g[r.show] = "false"; break; case "scrollto": jQuery("html, body").animate({ scrollTop: v.offset().top }, "fast"); break; case "setfocusto": A.focus(); break; case "triggerbluron": A.blur() } } catch (Q) { e.console && console.log(Q) } } } function B(e, t, a, s) { if (r.fields in t) for (var i = t[r.fields], n = 0; n < i.length; n++) { var l = i[n]; if (r.field_sets in l) { var o = e + "/" + l[r.key]; if (r.control_btns in l) { for (var d = l[r.control_btns], u = 0; u < d.length; u++)if (r.key in d[u]) { var c = d[u]; if ("add" === c[r.key] && r.params in c) { for (var p = c[r.params], h = 0; h < p.length; h++)if ("values" === p[h][r.key] && r.param in p[h]) { var f = p[h][r.param][0]; void 0 !== f && (s[o] = f) } } } } a[o] = l[r.field_sets][0], B(o, l[r.field_sets][0], a, s) } } } function S(e, t, a, s, i, n) { var l = {}; s in n.RepeatableGroups.Adds && (l = eA(n.RepeatableGroups.Adds[s])); var o = [l], d = {}; s in n.RepeatableGroups.Values && (d = eA(n.RepeatableGroups.Values[s])), es(o, eA([d]), e.join(h.Key), n), i ? a[r.field_sets].unshift(o[0]) : a[r.field_sets].push(o[0]); for (var c = 0; c < a[r.field_sets].length; c++)a[r.field_sets][c][r.key] = c.toString(); t.children("." + u.RepGrpSets).empty().html(V(a, e, !0, n)), $(t, n); var p = e.join(h.Key); O(["ongroupitemadd"], e, n); var f = _(p, n); for (var m in n.Interactions.Setting) 0 === m.indexOf(p) && (f = f.concat(_(m, n))); var b = R(n); "Changed" in n && n.Changed(t, s, null, null, b.Values, null, n, "usergroupitemadd"), I(f, n) } function H(t, a, s) { var i = t.parent().parent(), n = s.FieldsCurrent[r.field_sets], l = i.data(c.DATA_FormKeys), o = W(l.slice(0), n, !0), u = t.index(), p = [], f = !0; switch (a) { case "remove": var m = 0; if (r.mods in o) { var b = ed(o[r.mods]); if (d.Count in b) try { var v = ec(b[d.Count][r.params]); d.Min in v && (m = parseInt(v[d.Min])) } catch (A) { e.console && console.log("JFS Error: Error parsing repeatable group min count modifier", l, A) } } o[r.field_sets].length > m ? (o[r.field_sets].splice(u, 1), p.push("ongroupitemremove")) : f = !1; break; case "up": var g = u - 1; g > -1 && (N(o[r.field_sets], u, g), p.push("ongroupitemmove", "ongroupitemmoveup")); break; case "down": var F = u + 1; F < o[r.field_sets].length && (N(o[r.field_sets], u, F), p.push("ongroupitemmove", "ongroupitemmovedown")) }if (f) { var C = l.join(h.Key) + h.Key + u.toString(); "RepeatableGroupBeforeChange" in s ? s.RepeatableGroupBeforeChange(a, i, C, s, function () { j(l, i, o, C, p, a, s) }) : j(l, i, o, C, p, a, s) } } function j(e, t, a, s, i, n, l) { for (var o = 0; o < a[r.field_sets].length; o++)a[r.field_sets][o][r.key] = o + ""; !function e(t, a) { t.find("input, select, textarea").each(function () { var e = jQuery(this); void 0 !== jQuery.ui && (e.hasClass(u.Date) || e.hasClass(u.DateTime) || e.hasClass(u.DateTimeLocal)) && e.datepicker("destroy") }) }(t, l), t.children("." + u.RepGrpSets).empty().html(V(a, e, !0, l)), $(t, l), O(i, e, l); var d = _(e.join(h.Key), l), c = R(l); "Changed" in l && l.Changed(t, s, null, null, c.Values, null, l, "usergroupitem" + n), I(d, l) } function O(e, t, a) { var s = t.join(h.Key), i = a.Interactions.Setting; if (s in i) for (var n = 0; n < i[s].length; n++) { var l = !1, o = i[s][n][r.detections]; i[s][n][r.actions]; for (var d = 0; d < o.length; d++)-1 !== e.indexOf(o[d][r.detect]) && (l = !0); l ? r.actions in i[s][n] ? I(i[s][n][r.actions], a) : r.actions_true in i[s][n] && I(i[s][n][r.actions_true], a) : r.actions_false in i[s][n] && I(i[s][n][r.actions_false], a) } } function R(e) { var t = {}; t[r.values] = {}, e.ValuesKeys = [], e.ValuesUnfilled = []; for (var a = function e(t, a, s) { for (var i = [], n = 0; n < t.length; n++) { s.ValuesKeys[a] = t[n][r.key]; for (var l = t[n][r.fields], o = {}, u = 0; u < l.length; u++) { var c = l[u]; if ("button" !== c[r.type] && "html" !== c[r.type] && !(r.show in c && "false" === c[r.show]) && !(r.show in t[n] && "false" === t[n][r.show])) { if (r.field_sets in c) s.ValuesKeys[a + 1] = c[r.key], o[c[r.key]] = e(c[r.field_sets], a + 2, s); else { var p = r.field_value in c ? c[r.field_value] : ""; if (o[c[r.key]] = p, r.mods in c) { var f = ed(c[r.mods]); if (d.Req in f && "" === p) { var m = s.ValuesKeys.slice(0, a + 1); m.push(c[r.key]); var b = m.join(h.Key), v = {}; v[r.key] = b, v[r.param] = 'Sorry, the required field, "' + c[r.label] + '", appears to be unfilled.', r.param in f[d.Req] && (v[r.param] = f[d.Req][r.param]), s.ValuesUnfilled.push(v) } } } } } i.push(o) } return i }(e.FieldsCurrent[r.field_sets], 0, e), s = 0; s < a.length; s++)jQuery.isEmptyObject(a[s]) || (t[r.values][e.FieldsCurrent[r.field_sets][s][r.key]] = a[s]); return { Values: t, Unfilled: e.ValuesUnfilled } } function N(e, t, a) { e.splice(a, 0, e.splice(t, 1)[0]) } function W(e, t, a) { var s = t[0]; if (t.length > 1) for (var i = 0; i < t.length; i++)t[i][r.key] === e[0] && (s = t[i]); var n = s[r.fields], l = n[0]; if (n.length > 1) for (var o = 0; o < n.length; o++)n[o][r.key] === e[1] && (l = n[o]); return r.field_sets in l ? (e.shift(), e.shift(), a && 0 === e.length) ? l : l[r.field_sets].length < 1 ? {} : W(e, l[r.field_sets], a) : l[r.key] === e[1] ? l : {} } function K(e, t) { var a = t[0]; if (t.length > 1) for (var s = 0; s < t.length; s++)t[s][r.key] === e[0] && (a = t[s]); var i = a[r.fields], n = i[0]; if (i.length > 1) for (var l = 0; l < i.length; l++)i[l][r.key] === e[1] && (n = i[l]); return e.length <= 3 ? "repeatablegroup" === n[r.type] : (e.shift(), e.shift(), e[0] = "0", K(e, n[r.field_sets])) } function E(e, t, a) { var s = t; if (t.hasClass(u.Form)) s = t.children("." + u.KeyPrefix + e[0]); else if (t.hasClass(u.Set)) { var i = t.children("fieldset").children("." + u.ContainsFieldPrefix + e[0]); i.hasClass(u.ContainsGroup) ? (s = a && 1 === e.length ? i : i.children("div." + u.Group).children("div." + u.RepGrpSets).children("." + u.KeyPrefix + e[1]), e.shift()) : s = a ? i : i.find("[data-" + c.DATA_FieldName + '="' + e[0] + '"]') } else t.length > 1 && (s = s.eq(e[0])); return e.length <= 1 ? s : (e.shift(), E(e, s, a)) } function M(e, t) { return jQuery("#" + t.ContainerId + " form > div." + u.ContainsSetPrefix + e) } function V(e, t, a, s) { var i = "", n = e; a && (n = e[r.field_sets]); for (var l = 0; l < n.length; l++) { var o, c = n[l], p = l + ""; r.key in c && (p = c[r.key]); var h = []; h.push(u.KeyPrefix + p); var f = [], m = {}; r.mods in c && (m = ed(c[r.mods])), d.AddClass in m && h.push(m[d.AddClass][r.param]), d.AddDataAttrs in m && r.params in m[d.AddDataAttrs] && (f = ep(m[d.AddDataAttrs][r.params])); var b = ""; if (r.show in c && "false" === c[r.show] && h.push(u.Unshown), r.fields in c) { var v = {}; if (r.mods_group_fields in e) for (var A = e[r.mods_group_fields], g = 0; g < A.length; g++)r.key in A[g] && r.mods in A[g] && (v[A[g][r.key]] = A[g][r.mods]); for (var F = c[r.fields], C = 0; C < F.length; C++) { if (a) { var y = l + "/" + F[C][r.key]; y in v && (r.mods in F[C] ? F[C][r.mods] = eu(F[C][r.mods].slice(0), v[y]) : F[C][r.mods] = v[y]) } b += q(F[C], t, p, a, s) } } i += G(a ? "repgrpset" : "set", a ? e : c, l, h, f, [], b, s) } return i } function G(e, t, s, i, n, l, o, c) { if (i.push(u.Container), e in c.CustomContainers) o = c.CustomContainers[e](i, o, c); else switch (e) { case "form": if (i.push(u.Form), r.mods in c.FieldsInit) { var p = ed(c.FieldsInit[r.mods]); if (d.AddClass in p && r.param in p[d.AddClass] && "" !== p[d.AddClass][r.param]) for (var h = p[d.AddClass][r.param].split(" "), f = 0; f < h.length; f++)i.push(h[f]); d.AddDataAttrs in p && r.params in p[d.AddDataAttrs] && (n = ep(p[d.AddDataAttrs][r.params])) } n.push(er("class", i.join(" "))), n.push(er("autocomplete", c.AutoComplete ? "on" : "off")), c.NoValidate && n.push(er("novalidate", "novalidate")), c.IncludeAutoCompleteTrigger && (n.push(er("method", "GET")), n.push(er("action", m + a)), n.push(er("target", "jfs_trigger_browser_autocomplete_iframe"))), o = "<form " + n.join(" ") + ">" + o, c.IncludeAutoCompleteTrigger ? (o += "<button class='" + u.AutoCompleteTriggerButton + "' type='submit' class='jfs_display_none'></button></form>", o += "<iframe id='jfs_trigger_browser_autocomplete_iframe' name='jfs_trigger_browser_autocomplete_iframe' class='jfs_display_none' src='" + m + a + "'></iframe>") : o += "</form>"; break; case "set": if (i.push(u.Set), i.push(u.ContainsSetPrefix + t[r.key]), r.mods in t) { var b = ed(t[r.mods]); if (d.AddClass in b && r.param in b[d.AddClass] && "" !== b[d.AddClass][r.param]) for (var v = b[d.AddClass][r.param].split(" "), A = 0; A < v.length; A++)i.push(v[A]) } n.push(er("class", i.join(" "))); var g = "<div " + n.join(" ") + "><fieldset>"; r.legend in t && (g += "<legend>" + t[r.legend] + "</legend>"), o = g + o + "</fieldset></div>"; break; case "repgrpset": i.push(u.Set), n.push(er("class", i.join(" "))); var F = t[r.field_sets][s], C = J(t, !1, c), y = "<div " + n.join(" ") + "><fieldset>"; r.legend in F && (y += "<legend>" + F[r.legend] + " (" + parseInt(s + 1) + ")</legend>"), "" !== C.above && (y += '<div class="' + u.RepGrpCtrlBtns + " " + u.RepGrpCtrlBtns + '_above">' + C.above + "</div>"), y += o, "" !== C.below && (y += '<div class="' + u.RepGrpCtrlBtns + " " + u.RepGrpCtrlBtns + '_below">' + C.below + "</div>"), y += "</fieldset></div>", o = y; break; case "pair": var $ = ed(r.mods in t ? t[r.mods] : []), k = U($); d.AddClassToPair in $ && r.param in $[d.AddClassToPair] && i.push($[d.AddClassToPair][r.param]), i.push(u.Pair), n.push(er("class", i.join(" "))); var T = "radio" === t[r.type] || "checkbox" === t[r.type], L = "<div " + n.join(" ") + ">"; "" !== k.above && (L += "<div class='" + u.AugmentHtml + " " + u.AugmentHtmlAbove + "'>" + k.above + "</div>"), T && (L += "<fieldset " + l.join(" ") + ">"), L += o, T && (L += "</fieldset>"), "" !== k.below && (L += "<div class='" + u.AugmentHtml + " " + u.AugmentHtmlBelow + "'>" + k.below + "</div>"), L += "</div>", o = L; break; case "group": i.push(u.Group), n.push(er("class", i.join(" "))); var D = J(t, !0, c), w = "<div " + n.join(" ") + ">"; "" !== D.above && (w += '<div class="' + u.RepGrpBtns + " " + u.RepGrpBtns + '_above">' + D.above + "</div>"), w += '<div class="' + u.RepGrpSets + '">' + o + "</div>", "" !== D.below && (w += '<div class="' + u.RepGrpBtns + " " + u.RepGrpBtns + '_below">' + D.below + "</div>"), w += "</div>", o = w; break; case "label": var x = ed(r.mods in t ? t[r.mods] : []), _ = U(x); d.AddClassToLabelContainer in x && r.param in x[d.AddClassToLabelContainer] && i.push(x[d.AddClassToLabelContainer][r.param]), i.push(u.Label), n.push(er("class", i.join(" "))); var P = "<div " + n.join(" ") + ">"; "" !== _.label_above && (P += "<div class='" + u.AugmentHtml + " " + u.AugmentHtmlLabelAbove + "'>" + _.label_above + "</div>"), P += o, "" !== _.label_below && (P += "<div class='" + u.AugmentHtml + " " + u.AugmentHtmlLabelBelow + "'>" + _.label_below + "</div>"), P += "</div>", o = P; break; case "field": var I = ed(r.mods in t ? t[r.mods] : []), B = U(I); d.AddClassToFieldContainer in I && r.param in I[d.AddClassToFieldContainer] && i.push(I[d.AddClassToFieldContainer][r.param]), i.push(u.Field), n.push(er("class", i.join(" "))); var S = "<div " + n.join(" ") + ">"; "" !== B.field_above && (S += "<div class='" + u.AugmentHtml + " " + u.AugmentHtmlFieldAbove + "'>" + B.field_above + "</div>"), S += o, "" !== B.field_below && (S += "<div class='" + u.AugmentHtml + " " + u.AugmentHtmlFieldBelow + "'>" + B.field_below + "</div>"), S += "</div>", o = S }return o } function q(t, a, i, n, l) { var o = ""; if (r.key in t && r.type in t) { var p, f, m, b, v, A, g, F, C, y, $, k, T, L, D, w, x, _, P, I, B, S, H, j, O, N, W, K, E = !0, M = [], q = [], U = []; M.push(u.KeyPrefix + t[r.key]), U.push(u.KeyPrefix + t[r.key]), q.push(u.FieldTypePrefix + t[r.type]), q.push(u.ContainsFieldPrefix + t[r.key]), n && M.push(u.InRepGrp); var J = [], z = {}; r.mods in t && (z = ed(t[r.mods])); var et = ""; (d.Req in z || d.ReqCustom in z) && (et = l.LabelRequiredString), d.AddClass in z && r.param in z[d.AddClass] && q.push(z[d.AddClass][r.param]), d.AddDataAttrs in z && r.params in z[d.AddDataAttrs] && (J = ep(z[d.AddDataAttrs][r.params])); var ea = l.LabelPosition; r.label_position in t && (ea = t[r.label_position]), M.push(u.LabelPositionPrefix + ea), U.push(u.LabelPositionPrefix + ea); var es = a.slice(0); if (es.push(i, t[r.key]), t[r.type] in l.CustomFields) K = l.CustomFields[t[r.type]](t, M, z, l); else switch (t[r.type]) { case "text": K = Y(t, M, z, es, l); break; case "textarea": K = (p = t, f = M, m = z, b = es, v = l, A = { FieldCont: "field", FieldAttrs: [], FieldClassList: f, WidthFill: !0, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [] }, g = f.slice(0), F = "", A.FieldAttrs.push(er("id", el(b, v))), A.FieldAttrs.push(er("name", p[r.key])), A.FieldAttrs.push(eo(c.DATA_FieldName, p[r.key])), A.FieldAttrs.push(er("type", "textarea")), A.FieldAttrs.push(eo(c.DATA_FormKeys, b)), r.title in p && A.FieldAttrs.push(er(c.Title, p[r.title])), r.disabled in p && "true" === p[r.disabled] && A.FieldAttrs.push(c.Disabled), d.AddClassToField in m && r.param in m[d.AddClassToField] && g.push(m[d.AddClassToField][r.param]), r.placeholder in p && A.FieldAttrs.push(er(c.PlaceHolder, p[r.placeholder])), r.autofocus in p && A.FieldAttrs.push(c.AutoFocus), v.UseHtml5Required && d.Req in m && A.FieldAttrs.push(c.Required), r.field_value in p && (F = p[r.field_value]), A = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap, d.Length, d.AllowChars, d.PreventChars, d.CharCounter, d.WordCounter], m, A), C = ee(b, m, !0, v), A.Html += C.above + C.left + C.right + Q("textarea", v, A.FieldClassList.concat(g), A.FieldAttrs, A.WidthFill, F) + C.below, A); break; case "select": K = function e(t, a, s, i, n) { var l = { FieldCont: "field", FieldAttrs: [], FieldClassList: a, WidthFill: !0, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [] }, o = a.slice(0), u = ""; l.FieldAttrs.push(er("id", el(i, n))), l.FieldAttrs.push(er("name", t[r.key])), l.FieldAttrs.push(eo(c.DATA_FieldName, t[r.key])), l.FieldAttrs.push(er("type", "select")), l.FieldAttrs.push(eo(c.DATA_FormKeys, i)), r.title in t && l.FieldAttrs.push(er(c.Title, t[r.title])), r.disabled in t && "true" === t[r.disabled] && l.FieldAttrs.push(c.Disabled), d.AddClassToField in s && r.param in s[d.AddClassToField] && o.push(s[d.AddClassToField][r.param]), r.autofocus in t && l.FieldAttrs.push(c.AutoFocus), n.UseHtml5Required && d.Req in s && l.FieldAttrs.push(c.Required), r.field_value in t && (u = t[r.field_value]), l = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap], s, l); var p = ""; if (r.options in t) { var h = t[r.options]; "string" == typeof h ? h in n.CustomInputOptions ? p = Z(n.CustomInputOptions[h](R(n).Values, n), u) : h in n.PreDefindedOptionsDict && (p = Z(n.PreDefindedOptionsDict[h], u)) : p = Z(h, u) } else if (r.options_predefined in t) { var f = t[r.options_predefined]; f in n.CustomInputOptions ? p = Z(n.CustomInputOptions[f](R(n).Values, n), u) : f in n.PreDefindedOptionsDict && (p = Z(n.PreDefindedOptionsDict[f], u)) } var m = ee(i, s, !0, n); return l.Html += m.above + m.left + m.right + Q("select", n, l.FieldClassList.concat(o), l.FieldAttrs, l.WidthFill, p) + m.below, l }(t, M, z, es, l); break; case "radio": K = function e(t, a, s, i, n) { var l = { FieldCont: "field", FieldAttrs: [], FieldClassList: a, WidthFill: !1, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [], FieldsetAttrs: [] }, o = a.slice(0), p = "", h = el(i, n); l.FieldAttrs.push(er("type", "radio")), r.title in t && l.FieldsetAttrs.push(er(c.Title, t[r.title])), d.AddClassToField in s && r.param in s[d.AddClassToField] && o.push(s[d.AddClassToField][r.param]), r.autofocus in t && l.FieldAttrs.push(c.AutoFocus), r.field_value in t && (p = t[r.field_value]), l.FieldContClassList.push(u.Field + "_radio"); var f = r.disabled in t && "true" === t[r.disabled]; l = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap], s, l); var m = n.InlineOptions; r.inline in t && (m = "true" === t[r.inline]); var b = n.OptionLabelPosition; r.option_label_position in t && (b = t[r.option_label_position]); var v = []; if (r.options in t) "string" == typeof (v = t[r.options]) && (v in n.CustomInputOptions ? v = n.CustomInputOptions[v](R(n).Values, n) : v in n.PreDefindedOptionsNoEmptyDict && (v = n.PreDefindedOptionsNoEmptyDict[v])); else if (r.options_predefined in t) { var A = t[r.options_predefined]; A in n.CustomInputOptions ? v = n.CustomInputOptions[A](R(n).Values, n) : A in n.PreDefindedOptionsNoEmptyDict && (v = n.PreDefindedOptionsNoEmptyDict[A]) } for (var g = 0; g < v.length; g++) { var F = v[g], C = [], y = { above: "", right: "", below: "", left: "" }; y[b] = "<span>" + F[r.label] + "</span>", C.push(u.RadioLabel), C.push(u.RadioLabel + "_" + b); var $ = l.FieldAttrs.slice(0), k = i.slice(0), T = i.slice(0); k.push(g), T.push(g); var L = {}; r.mods in F && (L = ed(F[r.mods])), d.AddClass in L && r.param in L[d.AddClass] && C.push(L[d.AddClass][r.param]), d.AddDataAttrs in L && r.params in L[d.AddDataAttrs] && ($ = $.concat(ep(L[d.AddDataAttrs][r.params]))), m ? C.push(u.InlineOpt) : C.push(u.BlockOpt); var D = i.slice(1), w = D.length > 1 ? D[D.length - 2] + "_" + t[r.key] : t[r.key]; $.push(eo(c.DATA_FormKeys, T)), $.push(eo(c.DATA_FieldName, t[r.key])), $.push(er("id", h + "_" + parseInt(g + 1))), $.push(er("name", w)), $.push(er("value", F[r.value])); var x = f; r.disabled in F && (x = "true" === F[r.disabled]), x && $.push(c.Disabled), n.UseHtml5Required && d.Req in s && $.push(c.Required), F[r.value] === p && $.push(c.Checked), l.Html += "<label " + er("class", C.join(" ")) + ">", l.Html += y.left + y.above + Q("input", n, l.FieldClassList.concat(o), $, l.WidthFill) + y.right + y.below, l.Html += "</label>" } return l }(t, M, z, es, l); break; case "checkbox": K = function e(t, a, s, i, n) { var l = { FieldCont: "field", FieldAttrs: [], FieldClassList: a, WidthFill: !1, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [], FieldsetAttrs: [] }, o = a.slice(0), p = [], f = el(i, n); l.FieldAttrs.push(er("type", "checkbox")), r.title in t && l.FieldsetAttrs.push(er(c.Title, t[r.title])), d.AddClassToField in s && r.param in s[d.AddClassToField] && o.push(s[d.AddClassToField][r.param]), r.autofocus in t && l.FieldAttrs.push(c.AutoFocus), r.field_value in t && (p = t[r.field_value].split(h.Checkbox_Value)), l.FieldContClassList.push(u.Field + "_checkbox"); var m = r.disabled in t && "true" === t[r.disabled]; l = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap], s, l); var b = n.InlineOptions; r.inline in t && (b = "true" === t[r.inline]); var v = n.OptionLabelPosition; r.option_label_position in t && (v = t[r.option_label_position]); var A = []; if (r.options in t) "string" == typeof (A = t[r.options]) && (A in n.CustomInputOptions ? A = n.CustomInputOptions[A](R(n).Values, n) : A in n.PreDefindedOptionsNoEmptyDict && (A = n.PreDefindedOptionsNoEmptyDict[A])); else if (r.options_predefined in t) { var g = t[r.options_predefined]; g in n.CustomInputOptions ? A = n.CustomInputOptions[g](R(n).Values, n) : g in n.PreDefindedOptionsNoEmptyDict && (A = n.PreDefindedOptionsNoEmptyDict[g]) } for (var F = 0; F < A.length; F++) { var C = A[F], y = [], $ = { above: "", right: "", below: "", left: "" }; $[v] = "<span>" + C[r.label] + "</span>", y.push(u.CheckboxLabel), y.push(u.CheckboxLabel + "_" + v); var k = l.FieldAttrs.slice(0), T = i.slice(0), L = i.slice(0); T.push(F), L.push(F); var D = {}; r.mods in C && (D = ed(C[r.mods])), d.AddClass in D && r.param in D[d.AddClass] && y.push(D[d.AddClass][r.param]), d.AddDataAttrs in D && r.params in D[d.AddDataAttrs] && (k = k.concat(ep(D[d.AddDataAttrs][r.params]))), b ? y.push(u.InlineOpt) : y.push(u.BlockOpt); var w = i.slice(1), x = w.length > 1 ? w[w.length - 2] + "_" + t[r.key] : t[r.key]; k.push(eo(c.DATA_FormKeys, L)), k.push(eo(c.DATA_FieldName, t[r.key])), k.push(er("id", f + "_" + parseInt(F + 1))), k.push(er("name", x)), k.push(er("value", C[r.value])); var _ = m; r.disabled in C && (_ = "true" === C[r.disabled]), _ && k.push(c.Disabled), n.UseHtml5Required && d.Req in D && k.push(c.Required), -1 !== p.indexOf(C[r.value]) && k.push(c.Checked), l.Html += "<label " + er("class", y.join(" ")) + ">", l.Html += $.left + $.above + Q("input", n, l.FieldClassList.concat(o), k, l.WidthFill) + $.right + $.below, l.Html += "</label>" } return l }(t, M, z, es, l); break; case "password": K = (y = t, $ = M, k = z, T = es, L = l, D = { FieldCont: "field", FieldAttrs: [], FieldClassList: $, WidthFill: !0, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [] }, w = $.slice(0), D.FieldAttrs.push(er("id", el(T, L))), D.FieldAttrs.push(er("name", y[r.key])), D.FieldAttrs.push(eo(c.DATA_FieldName, y[r.key])), D.FieldAttrs.push(er("type", "password")), D.FieldAttrs.push(eo(c.DATA_FormKeys, T)), r.title in y && D.FieldAttrs.push(er(c.Title, y[r.title])), r.disabled in y && "true" === y[r.disabled] && D.FieldAttrs.push(c.Disabled), d.AddClassToField in k && r.param in k[d.AddClassToField] && w.push(k[d.AddClassToField][r.param]), r.autofocus in y && D.FieldAttrs.push(c.AutoFocus), r.autocomplete in y && D.FieldAttrs.push(er(c.AutoComplete, "true" === y[r.autocomplete] ? "on" : "off")), L.UseHtml5Required && d.Req in k && D.FieldAttrs.push(c.Required), L.UseLabelsAsFieldTitles && r.label in y && "" !== y[r.label] && D.FieldAttrs.push(er(c.Title, y[r.label])), r.field_value in y && D.FieldAttrs.push(er("value", y[r.field_value])), D = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap, d.Length, d.AllowChars, d.PreventChars], k, D), x = ee(T, k, !0, L), D.Html += x.above + x.left + x.right + Q("input", L, D.FieldClassList.concat(w), D.FieldAttrs, D.WidthFill) + x.below, D); break; case "hidden": K = (_ = t, P = M, I = z, B = es, S = l, H = { FieldCont: "field", FieldAttrs: [], FieldClassList: P, WidthFill: !1, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [] }, j = P.slice(0), H.FieldAttrs.push(er("id", el(B, S))), H.FieldAttrs.push(er("name", _[r.key])), H.FieldAttrs.push(eo(c.DATA_FieldName, _[r.key])), H.FieldAttrs.push(er("type", "hidden")), H.FieldAttrs.push(eo(c.DATA_FormKeys, B)), d.AddClassToField in I && r.param in I[d.AddClassToField] && j.push(I[d.AddClassToField][r.param]), r.field_value in _ && H.FieldAttrs.push(er("value", _[r.field_value])), H = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap], I, H), H.Html += Q("input", S, H.FieldClassList.concat(j), H.FieldAttrs, H.WidthFill), H), q.push(u.ContainsHiddenField); break; case "old-browser-number": M.push(u.Field + "_input_number"), K = Y(t, M, z, es, l); break; case "old-browser-date": case "old-browser-datetime": case "old-browser-datetime-local": K = function e(t, a, s, i, n) { var l = { FieldCont: "field", FieldAttrs: [], FieldClassList: a, WidthFill: !0, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [] }, o = a.slice(0); switch (l.FieldAttrs.push(er("id", el(i, n))), l.FieldAttrs.push(er("name", t[r.key])), l.FieldAttrs.push(eo(c.DATA_FieldName, t[r.key])), l.FieldAttrs.push(er("type", "text")), l.FieldAttrs.push(eo(c.DATA_FormKeys, i)), r.title in t && l.FieldAttrs.push(er(c.Title, t[r.title])), r.disabled in t && "true" === t[r.disabled] && l.FieldAttrs.push(c.Disabled), d.AddClassToField in s && r.param in s[d.AddClassToField] && o.push(s[d.AddClassToField][r.param]), r.placeholder in t && l.FieldAttrs.push(er(c.PlaceHolder, t[r.placeholder])), r.autofocus in t && l.FieldAttrs.push(c.AutoFocus), n.UseHtml5Required && d.Req in s && l.FieldAttrs.push(c.Required), n.UseLabelsAsFieldTitles && r.label in t && "" !== t[r.label] && l.FieldAttrs.push(er(c.Title, t[r.label])), r.field_value in t && l.FieldAttrs.push(er("value", t[r.field_value])), l = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap], s, l), t[r.type]) { case "date": l.FieldClassList.push(u.Date); break; case "datetime": l.FieldClassList.push(u.DateTime); break; case "datetime-local": l.FieldClassList.push(u.DateTimeLocal) }var p = {}; return jQuery.each(s, function (e, t) { var a = t[r.param]; r.type in t && ("int" === t[r.type] && (a = parseInt(a)), "bool" === t[r.type] && (a = "true" === a.toLowerCase())), p[e] = a }), l.FieldAttrs.push(eo(c.DATA_DTPicker, p)), l.Html += Q("input", n, l.FieldClassList.concat(o), l.FieldAttrs, l.WidthFill), l }(t, M, z, es, l); break; case "button": K = function t(a, s, i, n, l) { var o = { FieldCont: "field", FieldAttrs: [], FieldClassList: s, WidthFill: !0, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [] }, p = s.slice(0); o.FieldAttrs.push(er("id", el(n, l))), o.FieldAttrs.push(er("name", a[r.key])), o.FieldAttrs.push(eo(c.DATA_FieldName, a[r.key])), o.FieldAttrs.push(er("type", "button")), o.FieldAttrs.push(eo(c.DATA_FormKeys, n)), r.title in a && o.FieldAttrs.push(er(c.Title, a[r.title])), r.disabled in a && "true" === a[r.disabled] && o.FieldAttrs.push(c.Disabled), d.AddClassToField in i && r.param in i[d.AddClassToField] && p.push(i[d.AddClassToField][r.param]), r.autofocus in a && o.FieldAttrs.push(c.AutoFocus), l.UseLabelsAsFieldTitles && r.label in a && "" !== a[r.label] && o.FieldAttrs.push(er(c.Title, a[r.label])), r.field_value in a && o.FieldAttrs.push(er("value", a[r.field_value])), o.FieldClassList.push(u.Btn), o = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap], i, o); var h = "", f = "", m = l.IconLabelPosition, b = "", v = ""; try { d.ButtonText in i && (h = i[d.ButtonText][r.param]), d.ButtonIcon in i && (f = i[d.ButtonIcon][r.param]), d.ButtonIconLabelPosition in i && (m = i[d.ButtonIconLabelPosition][r.param]), d.ButtonFunction in i && (b = i[d.ButtonFunction][r.param]), d.ButtonFunctionParam in i && (v = i[d.ButtonFunctionParam][r.param]) } catch (A) { e.console && console.log("JFS Error: Error parsing button field modifiers.", n, A) } var g = "", F = ""; return "" !== h && o.FieldClassList.push(u.Btn + "_label_" + m), "" !== f && (F = "<img src='" + f + "' " + er("alt", "Icon: " + ("" === h ? "Button" : h)) + "/>", o.FieldClassList.push(u.Btn + "_icon")), g = "left" === m ? h + F : F + h, o.FieldAttrs.push(eo(c.DATA_BtnFunct, b)), o.FieldAttrs.push(eo(c.DATA_BtnFunctParam, v)), o.FieldAttrs.push(eo(c.DATA_FormKeys, n)), o.Html += Q("button", l, o.FieldClassList.concat(p), o.FieldAttrs, o.WidthFill, g), o }(t, M, z, es, l); break; case "html": K = (O = t, N = z, W = "", r.field_value in O && (W = O[r.field_value]), { FieldCont: "field", FieldContClassList: [], LabelContClassList: [], PairContClassList: [], Html: W }), q.push(u.ContainsHtmlField); break; case "repeatablegroup": K = { FieldCont: "group", FieldAttrs: [], FieldClassList: M, WidthFill: !0, Html: V(t, es, !0, l), FieldContClassList: [], LabelContClassList: [], PairContClassList: [u.ContainsGroup] }, J.push(eo(c.DATA_FormKeys, es)), K = X([], z, K); break; default: -1 !== s.indexOf(t[r.type]) ? K = function t(a, s, i, n, l, o, p) { var h = { FieldCont: "field", FieldAttrs: [], FieldClassList: n, WidthFill: !0, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [] }, f = n.slice(0); if (h.FieldAttrs.push(er("id", el(o, p))), h.FieldAttrs.push(er("name", i[r.key])), h.FieldAttrs.push(eo(c.DATA_FieldName, i[r.key])), h.FieldAttrs.push(er("type", a)), h.FieldAttrs.push(eo(c.DATA_FormKeys, o)), r.title in i && h.FieldAttrs.push(er(c.Title, i[r.title])), r.disabled in i && "true" === i[r.disabled] && h.FieldAttrs.push(c.Disabled), d.AddClassToField in l && r.param in l[d.AddClassToField] && f.push(l[d.AddClassToField][r.param]), r.placeholder in i && h.FieldAttrs.push(er(c.PlaceHolder, i[r.placeholder])), r.autofocus in i && h.FieldAttrs.push(c.AutoFocus), r.autocomplete in i && h.FieldAttrs.push(er(c.AutoComplete, "true" === i[r.autocomplete] ? "on" : "off")), p.UseHtml5Required && d.Req in l && h.FieldAttrs.push(c.Required), p.UseLabelsAsFieldTitles && r.label in i && "" !== i[r.label] && h.FieldAttrs.push(er(c.Title, i[r.label])), r.field_value in i && h.FieldAttrs.push(er("value", i[r.field_value])), h = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap], l, h), d.Min in l) try { h.FieldAttrs.push(er("min", l[d.Min][r.param])) } catch (m) { e.console && console.log("JFS Error: Error parsing minimum modifier.", o, m) } if (d.Max in l) try { h.FieldAttrs.push(er("max", l[d.Max][r.param])) } catch (b) { e.console && console.log("JFS Error: Error parsing maximum modifier.", o, b) } h.FieldClassList.push(u.Field + "_input_" + a); var v = ee(o, l, s, p); return h.Html += v.above + v.left + v.right + Q("input", p, h.FieldClassList.concat(f), h.FieldAttrs, h.WidthFill) + v.below, h }(t[r.type], !0, t, M, z, es, l) : E = !1 }r.show in t && "false" === t[r.show] && q.push(u.Unshown); var ei = ""; if (E) { var en = { above: "", right: "", below: "", left: "" }; en[ea] = function t(a, s, i, n, l, o) { var c = ""; if (r.label in a) { var p = [], h = [], f = ""; if (d.InfoBub in n) try { var m = ec(n[d.InfoBub][r.params]), b = "icon" in m ? m.icon : o.InfoBubbleIcon; "" !== b && (f = '<span class="' + u.InfoBub + '">', f += '<img class="' + u.InfoBub + '" src="' + b + '" alt="Additional Info Icon" />', f += "<span>" + m.html + "</span>", f += "</span>") } catch (v) { e.console && console.log("JFS Error: Error parsing info bubble modifier.", l, v) } var A = o.LabelSuffix; if (d.LabelSuffix in n) try { A = n[d.LabelSuffix][r.param] } catch (g) { e.console && console.log("JFS Error: Error parsing label suffix modifier.", l, g) } var F = a[r.label] + A, C = jQuery("<div/>").html(a[r.label]).text(); if ("" !== s) { i.push(u.Req); var y = o.LabelRequiredPrepend; if (d.ReqPrepend in n) try { y = "true" === n[d.ReqPrepend][r.param] } catch ($) { e.console && console.log("JFS Error: Error parsing lable required prepend modifier.", l, $) } y ? (F = s + F, C = s + C) : (F += s, C += s) } F += f, d.AddClassToLabel in n && r.param in n[d.AddClassToLabel] && p.push(n[d.AddClassToLabel][r.param]), h.push(er("class", p.join(" "))), F = "radio" === a[r.type] || "checkbox" === a[r.type] ? "<legend " + h.join(" ") + ">" + F + "</legend>" : "repeatablegroup" === a[r.type] ? "<p " + h.join(" ") + ">" + F + "</p>" : '<label for="' + el(l, o) + '" ' + h.join(" ") + ">" + F + "</label>", c = G("label", a, 0, i, [], [], F, o) } return c }(t, et, U.concat(K.LabelContClassList), z, es, l), d.CharCounter in z && (K.Html += '<span class="' + u.CharCounterText + '">0 characters</span>'), d.WordCounter in z && (K.Html += '<span class="' + u.WordCounterText + '">0 words</span>'), ei += en.above + en.left + en.right, ei += G(K.FieldCont, t, 0, M.concat(K.FieldContClassList), J, [], K.Html, l), ei += en.below, q = q.concat(K.PairContClassList) } else ei = "<p style='color: red; text-align: center;'>OH, SNAP! The field type, \"" + t[r.type] + '" was not found so this field cannot be rendered.</p>'; var eu = []; "FieldsetAttrs" in K && (eu = K.FieldsetAttrs), o = G("pair", t, 0, q, [], eu, ei, l) } return o } function U(e) { var t = { above: "", below: "", label_above: "", label_below: "", field_above: "", field_below: "" }; if (d.AugmentHtml in e && r.params in e[d.AugmentHtml]) { for (var a = e[d.AugmentHtml][r.params], s = 0; s < a.length; s++)if (r.key in a[s] && r.param in a[s]) switch (a[s][r.key]) { case "html_above": t.above = a[s][r.param]; break; case "html_below": t.below = a[s][r.param]; break; case "html_label_above": t.label_above = a[s][r.param]; break; case "html_label_below": t.label_below = a[s][r.param]; break; case "html_field_above": t.field_above = a[s][r.param]; break; case "html_field_below": t.field_below = a[s][r.param] } } return t } function J(t, a, s) { var i = { above: "", below: "" }; if (r.control_btns in t) for (var l = t[r.control_btns], o = 0; o < l.length; o++)try { if (r.key in l[o]) { var d = l[o], p = d[r.key], h = "above", f = "", m = "", b = "", v = s.IconLabelPosition, A = "append", g = "add" === p; if (a) { if (!g) continue } else if (g) continue; if (p in s.RepeatableGroupIcons && (b = s.RepeatableGroupIcons[p]), r.params in d) for (var F = d[r.params], C = 0; C < F.length; C++) { var y = F[C][r.param]; switch (F[C][r.key]) { case "add_location": A = y; break; case "btn_position": h = y; break; case "label": f = y; break; case "title": m = y; break; case "icon": b = y; break; case "icon_label_position": v = y } } if ("" === m) switch (p) { case "add": m = "Add"; break; case "remove": m = "Remove"; break; case "up": m = "Move Up"; break; case "down": m = "Move Down"; break; case "drag": m = "Drag to Reposition"; break; default: m = "Button" }var $ = []; $.push(u.RepGrpBtn), $.push(u.RepGrpBtn + "_" + p); var k = []; k.push(er("title", m)), g && k.push(eo(c.DATA_RepGrpBtnAddLoc, A)); var T = "", L = ""; "" !== f && $.push(u.RepGrpBtn + "_label_" + v), "" !== b && (L = "<img src='" + b + "' " + er("alt", "Icon: " + m) + "/>", $.push(u.RepGrpBtn + "_icon")), T = "left" === v ? f + L : L + f, k.push(er("class", $.join(" "))), "drag" === p && void 0 !== jQuery.ui && (s.Interface = n[0]) ? i[h] += "<span " + k.join(" ") + ">" + T + "</span>" : (k.push(er("type", "button")), i[h] += "<button " + k.join(" ") + ">" + T + "</button>") } } catch (D) { e.console && console.log("JFS Error: Error parsing repeatable group buttons.", t, D) } return i } function Y(e, t, a, s, i) { var n = { FieldCont: "field", FieldAttrs: [], FieldClassList: t, WidthFill: !0, Html: "", FieldContClassList: [], LabelContClassList: [], PairContClassList: [] }, l = t.slice(0); n.FieldAttrs.push(er("id", el(s, i))), n.FieldAttrs.push(er("name", e[r.key])), n.FieldAttrs.push(eo(c.DATA_FieldName, e[r.key])), n.FieldAttrs.push(er("type", "text")), n.FieldAttrs.push(eo(c.DATA_FormKeys, s)), r.title in e && n.FieldAttrs.push(er(c.Title, e[r.title])), r.disabled in e && "true" === e[r.disabled] && n.FieldAttrs.push(c.Disabled), d.AddClassToField in a && r.param in a[d.AddClassToField] && l.push(a[d.AddClassToField][r.param]), r.placeholder in e && n.FieldAttrs.push(er(c.PlaceHolder, e[r.placeholder])), r.autofocus in e && n.FieldAttrs.push(c.AutoFocus), r.autocomplete in e && n.FieldAttrs.push(er(c.AutoComplete, "true" === e[r.autocomplete] ? "on" : "off")), i.UseHtml5Required && d.Req in a && n.FieldAttrs.push(c.Required), r.field_value in e && n.FieldAttrs.push(er("value", e[r.field_value])), n = X([d.AddClass, d.AddDataAttrs, d.WidthFillWrap, d.Length, d.AllowChars, d.PreventChars, d.CharCounter, d.WordCounter], a, n); var o = ee(s, a, !0, i); return n.Html += o.above + o.left + o.right + Q("input", i, n.FieldClassList.concat(l), n.FieldAttrs, n.WidthFill) + o.below, n } function X(t, a, s) { if (-1 !== t.indexOf(d.AddClass) && d.AddClass in a && r.param in a[d.AddClass] && s.FieldClassList.push(a[d.AddClass][r.param]), -1 !== t.indexOf(d.AddDataAttrs) && d.AddDataAttrs in a && r.params in a[d.AddDataAttrs] && (s.FieldAttrs = s.FieldAttrs.concat(ep(a[d.AddDataAttrs][r.params]))), -1 !== t.indexOf(d.Length) && d.Length in a) try { var i = ec(a[d.Length][r.params]); if (d.Min in i) try { s.FieldAttrs.push(eo(c.DATA_MinLength, parseInt(i[d.Min]))) } catch (n) { e.console && console.log("JFS Error: Error parsing min length status modifier.", a, n) } if (d.Max in i) try { s.FieldAttrs.push(er(c.MaxLength, i[d.Max])) } catch (l) { e.console && console.log("JFS Error: Error parsing max length status modifier.", a, l) } if (d.Status in i) try { var o = "" !== i[d.Status] ? i[d.Status] : "always"; s.FieldAttrs.push(eo(c.DATA_ShowStatus, o)) } catch (p) { e.console && console.log("JFS Error: Error parsing length status modifier.", a, p) } } catch (h) { e.console && console.log("JFS Error: Error parsing length modifiers.", a, h) } if (-1 !== t.indexOf(d.CharCounter) && d.CharCounter in a && (s.FieldClassList.push(u.CharCounter), s.FieldContClassList.push(u.CharCounter)), -1 !== t.indexOf(d.WordCounter) && d.WordCounter in a && (s.FieldClassList.push(u.WordCounter), s.FieldContClassList.push(u.WordCounter)), -1 !== t.indexOf(d.WidthFillWrap) && d.WidthFillWrap in a) try { s.WidthFill = "true" === a[d.WidthFillWrap][r.param] } catch (f) { e.console && console.log("JFS Error: Error parsing width fill wrap modifier.", a, f) } if (-1 !== t.indexOf(d.AllowChars) && d.AllowChars in a) try { s.FieldAttrs.push(eo(c.DATA_AllowChars, a[d.AllowChars][r.param])) } catch (m) { e.console && console.log("JFS Error: Error parsing allow chars modifier.", a, m) } if (-1 !== t.indexOf(d.PreventChars) && d.PreventChars in a) try { s.FieldAttrs.push(eo(c.DATA_PreventChars, a[d.PreventChars][r.param])) } catch (b) { e.console && console.log("JFS Error: Error parsing prevent chars modifier.", a, b) } return s } function Q(e, t, a, s, i, n) { var l, r, o = ""; return a.push(u.Field + "_" + e), s.push(er("class", a.join(" "))), t.AddZeroedTabIndexes && s.push(er("tabindex", "0")), "input" === e ? o = "<input " + s.join(" ") + "/>" : "textarea" === e ? o = "<textarea " + s.join(" ") + ">" + (l = n, String(l).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")) + "</textarea>" : "select" === e ? o = "<select " + s.join(" ") + ">" + n + "</select>" : "button" === e && (o = "<button " + s.join(" ") + ">" + n + "</button>"), i && (o = (r = o, '<span class="' + u.FieldWrap + '">' + r + "</span>")), o } function Z(e, t) { for (var a = "", s = 0; s < e.length; s++)if (r.key in e[s]) { if (r.options in e[s]) { var i = e[s][r.options]; a += "<optgroup " + er("label", e[s][r.key]) + ">"; for (var n = 0; n < i.length; n++)a += z(i[n], t); a += "</optgroup>" } } else a += z(e[s], t); return a } function z(t, a) { var s = ""; try { var i = {}; r.mods in t && (i = ed(t[r.mods])); var n = []; n.push(er("value", t[r.value])), r.disabled in t && "true" === t[r.disabled] && n.push(c.Disabled), t[r.value] === a && n.push(c.Selected), d.AddClass in i && r.param in i[d.AddClass] && n.push(er("class", i[d.AddClass][r.param])), d.AddDataAttrs in i && r.params in i[d.AddDataAttrs] && (n = n.concat(ep(i[d.AddDataAttrs][r.params]))), s += "<option " + n.join(" ") + ">" + t[r.label] + "</option>" } catch (l) { e.console && console.log("JFS Error: Error parsing select option modifiers.", t, l) } return s } function ee(t, a, s, i) { var n = { above: "", right: "", below: "", left: "" }; if (s && d.AugmentBtns in a) try { for (var l = a[d.AugmentBtns][r.field_btns], o = 0; o < l.length; o++) { var p = ec(l[o][r.params]), h = d.ButtonPosition in p ? p[d.ButtonPosition] : i.FieldButtonPosition, f = d.ButtonText in p ? p[d.ButtonText] : "", m = d.ButtonTitle in p ? p[d.ButtonTitle] : "", b = d.ButtonIconLabelPosition in p ? p[d.ButtonIconLabelPosition] : i.IconLabelPosition, v = d.ButtonFunction in p ? p[d.ButtonFunction] : "", A = [u.AugmentBtn, u.AugmentBtn + "_" + h]; "" === m && (m = "" !== f ? f : "Button"); var g = "", F = ""; "" !== f && A.push(u.AugmentBtn + "_label_" + b), "btn_icon" in p && (F = "<img src='" + p.btn_icon + "' " + er("alt", "Icon: " + m) + "/>", A.push(u.AugmentBtn + "_icon")), g = "left" === b ? f + F : F + f; var C = []; C.push(er("type", "button")), C.push(er("class", A.join(" "))), C.push(er("title", m)), C.push(eo(c.DATA_BtnFunct, v)), C.push(eo(c.DATA_FormKeys, t)), n[h] += "<button " + C.join(" ") + ">" + g + "</button>" } } catch (y) { e.console && console.log("JFS Error: Error parsing augment buttons modifiers.", a, y) } return n } function et(e) { var t = []; return e.children().each(function (e, a) { var s = jQuery(a); a.nodeName === r.item && (s.children().length > 0 ? t.push(ea(s)) : t.push(s.text())) }), t } function ea(e) { var t = {}; return e.children().each(function (e, a) { var s = jQuery(a), i = a.nodeName; i in r && (i = r[i]), s.children().length > 0 ? t[i] = et(s) : t[i] = s.text() }), t } function es(e, t, a, s) { var i = {}; jQuery.each(t, function (e, t) { !function e(t, a, s) { "string" == typeof a ? s[t] = a : jQuery.each(a, function (a, i) { var n = t + "/" + a; "string" == typeof i ? s[n] = i : (s[n] = !0, e(n, i, s)) }) }(e, t, i) }); for (var n = 0; n < e.length; n++) { var l = e[n], o = r.key in l ? l[r.key] : ""; ei(o, o, a, l[r.fields], i, s) } } function ei(e, t, a, s, i, n) { for (var l = 0; l < s.length; l++) { var o = s[l], d = "" !== e ? e + "/" + o[r.key] : "0/" + o[r.key]; if (r.field_sets in o) { if (d + "/0" in i) for (var u = 0; u < 500; u++) { var c = d + "/" + u; if (c in i) { var p = a + t + "/" + o[r.key]; o[r.field_sets][u] = eA(n.RepeatableGroups.Adds[p]), o[r.field_sets][u][r.key] = u + "", ei(c, p, a, o[r.field_sets][u][r.fields], i, n) } } else o[r.field_sets] = [] } else d in i && (o[r.field_value] = i[d]) } } function en(e) { for (var t = {}, a = {}, s = e[r.field_sets], i = 0; i < s.length; i++) { var n = s[i]; if (r.fields in n) { for (var l = n[r.fields], o = 0; o < l.length; o++)if (r.key in l[o]) { var d = l[o][r.key]; r.field_value in l[o] ? a[d] = l[o][r.field_value] : a[d] = "" } } } return t[r.values] = a, t } function el(e, t) { return t.ContainerId + "_" + e.join("_") } function er(e, t) { var a; return e + '="' + (a = t, String(a).replace(/&/g, "&amp;").replace(/'/g, "&apos;").replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\r\n/g, "&#13;").replace(/[\r\n]/g, "&#13;")) + '"' } function eo(e, t) { return "data-" + e + "='" + ("string" == typeof t ? t : JSON.stringify(t)) + "'" } function ed(e) { for (var t = {}, a = 0; a < e.length; a++)t[e[a][r.key]] = e[a]; return t } function eu(e, t) { for (var a = ed(e), s = 0; s < t.length; s++)if (r.key in t[s]) { var i = t[s][r.key]; if (i in a) { var n = t[s][r.param]; i === d.AddClass && (n = a[i][r.param].split(" ").concat(n.split(" ")).join(" ")); for (var l = 0; l < e.length; l++)e[l][r.key] === i && (e[l][r.param] = n) } else e.push(t[s]) } return e } function ec(e) { for (var t = {}, a = 0; a < e.length; a++) { var s = r.param in e[a] ? e[a][r.param] : ""; t[e[a][r.key]] = s } return t } function ep(e) { for (var t = [], a = 0; a < e.length; a++) { var s = r.param in e[a] ? e[a][r.param] : ""; t.push(eo(e[a][r.key], s)) } return t } function eh(e, t, a) { e += ""; var s = ""; a && (e = e.replace(/ /g, "_")); for (var i = 0; i < e.length; i++)-1 !== t.toString().indexOf(e.charAt(i)) && (s += e.charAt(i)); return s } function ef(e) { var t = e.parent().parent().find("span." + u.CharCounterText).eq(0), a = e.val().length; t.text(a + " character" + (1 === a ? "" : "s")) } function em(e) { var t = e.parent().parent().find("span." + u.WordCounterText).eq(0), a = e.val().match(/\S+/g), s = a && a.length || 0; t.text(s + " word" + (1 === s ? "" : "s")) } function eb(e, t, a, s) { var i = []; s && "" !== a && i.push({ l: a, v: "" }); for (var n = 0; n < e.length; n++)i.push({ l: e[n], v: t[n] }); return i } function ev(e, t) { return Array(t - (e + "").length + 1).join("0") + e } function eA(e) { return JSON.parse(JSON.stringify(e)) } function eg(e) { for (var t = new Date, a = [], s = 0; s < 10; s++)a[s] = parseInt(t.getUTCFullYear() + s) + ""; for (var i = [], n = 0; n < 31; n++)i[n] = ev(n + 1, 2) + ""; for (var l = [], r = 0; r < 12; r++)l[r] = ev(r + 1, 2) + ""; for (var o = [], d = 0; d < 60; d++)o[d] = ev(d, 2) + ""; for (var u = [], c = 0; c < 60; c++)u[c] = ev(c, 2) + ""; var p = ["Ms", "Miss", "Mrs", "Mr", "Dr", "Prof", "Coach", "Pres", "Atty", "Rev", "Hon"], h = ["Female", "Male"], f = ["Single", "Married", "Separated", "Divorced", "Widowed", "Other"], m = ["AK (Alaska)", "AL (Alabama)", "AR (Arkansas)", "AZ (Arizona)", "CA (California)", "CO (Colorado)", "CT (Connecticut)", "DC (Dist. of Columbia)", "DE (Delaware)", "FL (Florida)", "GA (Georgia)", "HI (Hawaii)", "IA (Iowa)", "ID (Idaho)", "IL (Illinois)", "IN (Indiana)", "KS (Kansas)", "KY (Kentucky)", "LA (Louisiana)", "MA (Massachusetts)", "MD (Maryland)", "ME (Maine)", "MI (Michigan)", "MN (Minnesota)", "MO (Missouri)", "MS (Mississippi)", "MT (Montana)", "NC (North Carolina)", "ND (North Dakota)", "NE (Nebraska)", "NH (New Hampshire)", "NJ (New Jersey)", "NM (New Mexico)", "NV (Nevada)", "NY (New York)", "OH (Ohio)", "OK (Oklahoma)", "OR (Oregon)", "PA (Pennsylvania)", "RI (Rhode Island)", "SC (South Carolina)", "SD (South Dakota)", "TN (Tennessee)", "TX (Texas)", "UT (Utah)", "VA (Virginia)", "VT (Vermont)", "WA (Washington)", "WI (Wisconsin)", "WV (West Virginia)", "WY (Wyoming)"], b = ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY"], v = ["AS (American Samoa)", "GU (Guam)", "MP (Northern Mariana Islands)", "PR (Puerto Rico)", "VI (Virgin Islands)", "AA (Armed Forces - Americas excluding Canada)", "AE (Armed Forces - Europe, Canada, Middle East, Africa)", "AP (Armed Forces - Pacific)"], A = ["AS", "GU", "MP", "PR", "VI", "AA", "AE", "AP"], g = ["AB (Alberta)", "BC (British Columbia)", "MB (Manitoba)", "NB (New Brunswick)", "NL (Newfoundland and Labrador)", "NT (Northwest Territories)", "NS (Nova Scotia)", "NU (Nunavut)", "ON (Ontario)", "PE (Prince Edward Island)", "QC (Quebec)", "SK (Saskatchewan)", "YT (Yukon)"], F = ["AB", "BC", "MB", "NB", "NL", "NT", "NS", "NU", "ON", "PE", "QC", "SK", "YT"]; return { name_prefix: eb(p, p, "Select...", e), gender: eb(h, h, "Select...", e), marital_status: eb(f, f, "Select...", e), current_year_plus_10: eb(a, a, "", e), numeric_months_and_names: eb(["01 - January", "02 - February", "03 - March", "04 - April", "05 - May", "06 - June", "07 - July", "08 - August", "09 - September", "10 - October", "11 - November", "12 - December"], ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"], "", e), numeric_days: eb(i, i, "", e), hours_12: eb(l, l, "", e), minutes: eb(o, o, "", e), seconds: eb(u, u, "", e), link_targets: eb(["Current Window", "New Window"], ["_self", "_blank"], "", e), yes_no: eb(["Yes", "No"], ["yes", "no"], "", e), no_yes: eb(["No", "Yes"], ["no", "yes"], "", e), us_states: eb(m, b, "Select a State...", e), us_territories: eb(v, A, "Select a Territory...", e), canada_provinces: eb(g, F, "Select a State...", e), us_states_and_territories_and_canada: eb(["Outside U.S./Canada"], ["OUTSIDE"], "Select a State...", e).concat({ k: "US", os: eb(m, b, "").concat(eb(v, A, "", e)) }).concat({ k: "Canada", os: eb(g, F, "", e) }) } } e.JFS = y }(window);
